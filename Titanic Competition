{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"F5TwBPas3PiW"},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eQ9UYPoN3WQq","executionInfo":{"status":"error","timestamp":1738268893594,"user_tz":300,"elapsed":310,"user":{"displayName":"Andres Azqueta","userId":"15441593609568128522"}},"outputId":"25b67f2e-aa1f-4f84-868a-ab0881704ac9","colab":{"base_uri":"https://localhost:8080/","height":293}},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train.csv'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-7c4e9397e809>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1619\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1620\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1622\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1879\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1880\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1881\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1882\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    874\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train.csv'"]}],"source":["df = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train.csv')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"elapsed":538,"status":"error","timestamp":1738268894732,"user":{"displayName":"Andres Azqueta","userId":"15441593609568128522"},"user_tz":300},"id":"NRCCzLQp3jga","outputId":"47844e30-e9e4-41ec-8432-8e39fba67e94"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-4a676c3d8c05>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}],"source":["df.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_jMU3Tq33k13"},"outputs":[],"source":["df.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QUcbiO_v3qhY"},"outputs":[],"source":["df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NZm1cSeH4Atf"},"outputs":[],"source":["# Drop mising values\n","df1 = df.dropna()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VM7gXmtO6CcJ"},"outputs":[],"source":["df.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IlxlxMIP6VjF"},"outputs":[],"source":["df1.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KVoqUHcd6IE-"},"outputs":[],"source":["df.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SInFzoO16NWB"},"outputs":[],"source":["df1.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7Sf53IZk6TZz"},"outputs":[],"source":["df1.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rXBpN8YX6lpM"},"outputs":[],"source":["df1['VIP'] = df1['VIP'].astype(bool)\n","df1['CryoSleep'] = df1['CryoSleep'].astype(bool)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"elapsed":6,"status":"error","timestamp":1738268894733,"user":{"displayName":"Andres Azqueta","userId":"15441593609568128522"},"user_tz":300},"id":"oJUtrpX76tci","outputId":"91b93d35-a322-4c83-ad15-837df97de094"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df1' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-eda2b5cc1a42>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df1' is not defined"]}],"source":["df1.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z99k7Kpk60Vi"},"outputs":[],"source":["df1.dtypes"]},{"cell_type":"markdown","metadata":{"id":"JT59Q-Ar7JyB"},"source":["# Data Prep"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z-h-dsAz7NLt"},"outputs":[],"source":["df1.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CJKP8AtW6-9Z"},"outputs":[],"source":["features = ['CryoSleep', 'Age','VIP', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tr8gM_gH7gGq"},"outputs":[],"source":["X = df1[features]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NRwVOgJc7m4d"},"outputs":[],"source":["y = df1['Transported']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"m3P7osUc7ikq"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = .2, random_state=4)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JtsNpZBo8IL2"},"outputs":[],"source":["# import the class\n","from sklearn.linear_model import LogisticRegression\n","#instantiate the model\n","logreg = LogisticRegression(solver = 'newton-cg')\n","# fit the model with data\n","logreg.fit(X_train,y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6-fxCCDJ8M4Z"},"outputs":[],"source":["y_pred = logreg.predict(X_test)\n","# accuracy score is for classification\n","from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, y_pred)"]},{"cell_type":"markdown","metadata":{"id":"gzUPyxDc-a9t"},"source":["# Random Forest Classification"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PFORVc39-c95"},"outputs":[],"source":["# import the class\n","from sklearn.ensemble import RandomForestClassifier\n","#instantiate the model\n","rfc = RandomForestClassifier()\n","# fit the model with data\n","rfc.fit(X_train,y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uEHemsyZ-yvZ"},"outputs":[],"source":["y_pred = rfc.predict(X_test)\n","# accuracy score is for classification\n","from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, y_pred)"]},{"cell_type":"markdown","metadata":{"id":"CF3IeXNN_BK-"},"source":["# Categorical Encoding"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h4b9gcfb_LtN"},"outputs":[],"source":["df1.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Xf9jDc4yDAkx"},"outputs":[],"source":["df1['Destination'].unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"buSU-uDyDE8h"},"outputs":[],"source":["d_destionation = {'TRAPPIST-1e':0,'PSO J318.5-22':1,'55 Cancri e':2}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BPrxJGItDOro","colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"status":"error","timestamp":1738268895152,"user_tz":300,"elapsed":8,"user":{"displayName":"Andres Azqueta","userId":"15441593609568128522"}},"outputId":"85d3179a-d893-4def-bee9-a35e3b5c6e30"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df1' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-bd0d48957a6a>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'DestinationCode'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Destination'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0md_destionation\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df1' is not defined"]}],"source":["df1['DestinationCode'] = df1['Destination'].map(d_destionation)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0sDzhaPA_Ojf"},"outputs":[],"source":["df1['HomePlanet'].unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fSShyp2z_S7p"},"outputs":[],"source":["homeplanet = {'Europa':0,'Earth':1,'Mars':2}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ofS-JQzk_sYR"},"outputs":[],"source":["df1['HomeCode'] = df1['HomePlanet'].map(homeplanet)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yevWEop__ErK"},"outputs":[],"source":["df1.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bk_g9a0m_DBJ"},"outputs":[],"source":["df1.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NpM4SNqRAPZZ"},"outputs":[],"source":["df1.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QkXGyq37_6gI"},"outputs":[],"source":["features = ['CryoSleep', 'Age','VIP', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck','HomeCode','DestinationCode']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"neERegOjApO6"},"outputs":[],"source":["X = df1[features]\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = .2, random_state=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ph8H6k8bAovY"},"outputs":[],"source":["# import the class\n","from sklearn.ensemble import RandomForestClassifier\n","#instantiate the model\n","rfc = RandomForestClassifier(n_estimators=1000)\n","# fit the model with data\n","rfc.fit(X_train,y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pNljImOrAy_4"},"outputs":[],"source":["y_pred = rfc.predict(X_test)\n","# accuracy score is for classification\n","from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, y_pred)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3Fz9JClrFnUT"},"outputs":[],"source":["df1.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v_RnHEj_FoFn"},"outputs":[],"source":["df1['FamId'] = df1['PassengerId'].str[:4].astype(int)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nu1jS5E_FrB_"},"outputs":[],"source":["df1.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xDUs7r7gGAJ2"},"outputs":[],"source":["features = ['CryoSleep', 'Age','VIP', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck','HomeCode','DestinationCode','FamId']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ywrem-zYGYBl"},"outputs":[],"source":["df1.head(10)"]},{"cell_type":"markdown","metadata":{"id":"Zw0b6a-VGXe2"},"source":["# Including Cabin as Feature"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U6rAGboVGo6-"},"outputs":[],"source":["df1['Cabin']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BTHbrcmlrVBa"},"outputs":[],"source":["df1['CabinId'] = df1['Cabin'].str.split('/').str[1].astype(float).astype('Int64')"]},{"cell_type":"markdown","source":["# 1/24/24"],"metadata":{"id":"NYDkurX0sNC6"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train.csv')"],"metadata":{"id":"JlWL-CNnsOgW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"pfJRaYY-sUeH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"id":"_lJwsS5ksYH9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Imputing Missing Values"],"metadata":{"id":"cuEv9walsa4z"}},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"uNO0BgVQsZn9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"N-YmpS46tf6f"}},{"cell_type":"markdown","source":["Age Feat."],"metadata":{"id":"LO1fwqLlsvS5"}},{"cell_type":"code","source":["df['Age'].mean()"],"metadata":{"id":"vk_-QfWhs7b5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Age'] = df['Age'].fillna(29)"],"metadata":{"id":"buY-F9uyseLT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Age'].isna().sum()"],"metadata":{"id":"VSPypm7gs6--"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Vip"],"metadata":{"id":"3pEBkfxitPxO"}},{"cell_type":"code","source":["df['VIP'].sum()/df['VIP'].count()*100"],"metadata":{"id":"yd2nuzTLtAlh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['VIP'] = df['VIP'].fillna(False,inplace= True)"],"metadata":{"id":"q-FpkSBEuNAx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"HiFfOvvLvB5A"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["homeplanet imputation"],"metadata":{"id":"JC1iwpFJvNtc"}},{"cell_type":"code","source":["df['HomePlanet'].value_counts()"],"metadata":{"id":"wVLrztIOvD-O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['HomePlanet'] = df['HomePlanet'].fillna('Earth',inplace = True)"],"metadata":{"id":"6V_MLDZ8vWUE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"ZKKXOdNHvk_T"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Imputing Destination"],"metadata":{"id":"SRXFBdoywoki"}},{"cell_type":"code","source":["df['Destination'].value_counts()"],"metadata":{"id":"OlMINOLBwqhp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Destination'] = df['Destination'].fillna('TRAPPIST-1e', inplace  = True)"],"metadata":{"id":"cUG-QzitwzDS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"gb9YvWGjw-c9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.columns"],"metadata":{"id":"VpPz7_D1xRiV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Spent'] = df['RoomService'] + df['FoodCourt'] + df['ShoppingMall'] + df['Spa'] + df['VRDeck']"],"metadata":{"id":"AwwrnUgExsQU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.to_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train clean.csv',index = False)"],"metadata":{"id":"bdsdwnuWvoPC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == True, 'Spent'].mean()"],"metadata":{"id":"xch_z056yDFm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == True, ['FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']].fillna(0,inplace = True)"],"metadata":{"id":"aXFYifUfySOI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == True, ['FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']].sum()"],"metadata":{"id":"KCICdMsJyzSI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"QsctyBzDzpMn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'RoomService'].mean()"],"metadata":{"id":"62hPsfrL0RxA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'RoomService'].fillna(350.1467717717718, inplace = True)"],"metadata":{"id":"kzhm_Sbf0jQr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"QeOanp0N0uwK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['CryoSleep'] == False) & (df['RoomService'].isna()), 'RoomService'] =350"],"metadata":{"id":"ICe3Vjyw1ZSh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'FoodCourt'].mean()"],"metadata":{"id":"kfQyaDVd2MFF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['CryoSleep'] == False) & (df['FoodCourt'].isna()), 'FoodCourt'] = 713"],"metadata":{"id":"AQwd77Sz2ha9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'ShoppingMall'].mean()"],"metadata":{"id":"_XgEo1qS2Ori"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['CryoSleep'] == False) & (df['ShoppingMall'].isna()), 'ShoppingMall'] = 270"],"metadata":{"id":"jIKny8g32pFz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'Spa'].mean()"],"metadata":{"id":"fzrElH2I2VgT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['CryoSleep'] == False) & (df['Spa'].isna()), 'Spa'] = 486"],"metadata":{"id":"j4wKYMEI2tXu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'VRDeck'].mean()"],"metadata":{"id":"TcHQeQ8X2Y0u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['CryoSleep'] == False) & (df['VRDeck'].isna()), 'VRDeck'] = 475"],"metadata":{"id":"KHTD-_dj2ybM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Spent'] = df['RoomService'] + df['FoodCourt'] + df['ShoppingMall'] + df['Spa'] + df['VRDeck']"],"metadata":{"id":"NKfmS7i44BCM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[['RoomService','FoodCourt','ShoppingMall','Spa','VRDeck']].isna().sum()"],"metadata":{"id":"gVVgRcYL4iYb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['RoomService'].fillna(0, inplace = True)\n","df['FoodCourt'].fillna(0, inplace = True)\n","df['ShoppingMall'].fillna(0, inplace = True)\n","df['VRDeck'].fillna(0, inplace = True)\n","df['Spa'].fillna(0, inplace = True)"],"metadata":{"id":"pRe9vhNw4-qH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"1Ll1QOZK5l-t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"FASwrOrO5S5f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"5nORXBom17w_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train clean.csv')"],"metadata":{"id":"T3Ch8pE6wQGh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"tyq49FJqwgHt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"iEzjtowswgsk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Machine Learning Model With Clean Data"],"metadata":{"id":"EZWSqCVN5sFV"}},{"cell_type":"code","source":["df = df.dropna()"],"metadata":{"id":"WJbJBrOd6k9M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["features = ['CryoSleep', 'Age','VIP', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']\n","X = df[features]\n","y= df['Transported']\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = .2, random_state=1)"],"metadata":{"id":"UR9u1N0n5vMV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# import the class\n","from sklearn.ensemble import RandomForestClassifier\n","#instantiate the model\n","rfc = RandomForestClassifier(n_estimators=1000)\n","# fit the model with data\n","rfc.fit(X_train,y_train)"],"metadata":{"id":"dfWHTTsN6Opy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = rfc.predict(X_test)\n","# accuracy score is for classification\n","from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, y_pred)"],"metadata":{"id":"8QKejWiU6JLQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["January 26 Class"],"metadata":{"id":"-yQFB7-HVplA"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train.csv')"],"metadata":{"id":"8Dx7XAIxVs7S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"WhsLtHzWV8ua"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Home Planet Imputation"],"metadata":{"id":"pLB7k9CTWcf8"}},{"cell_type":"code","source":["df['HomePlanet'].value_counts()"],"metadata":{"id":"WKGczRjqWbLr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['HomePlanet'].fillna('Earth', inplace = True)"],"metadata":{"id":"zBlg0NJfW8Md"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"m4E81ZVBXivN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Imputing Destination"],"metadata":{"id":"PKbkto9QXqkZ"}},{"cell_type":"code","source":["df['Destination'].value_counts()"],"metadata":{"id":"qjyZsJh0XkBw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Destination'].fillna('TRAPPIST-1e',inplace = True)"],"metadata":{"id":"1Gb7UMwQX46f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"RrKm4JYsYCE6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Age Imputation"],"metadata":{"id":"SyxkFbuSYQb4"}},{"cell_type":"code","source":["df['Age'].mean()"],"metadata":{"id":"QCbRs3j4YD74"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.groupby('CryoSleep')['Age'].mean()"],"metadata":{"id":"Wbs8EPvSYXrP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.groupby('Destination')['Age'].mean()"],"metadata":{"id":"jOAumif8YiCZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.groupby('VIP')['Age'].mean()"],"metadata":{"id":"9g5GFdnRYuRQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.groupby('HomePlanet')['Age'].mean()"],"metadata":{"id":"RZCkJmgyYyKj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['Age'].isna()) & (df['HomePlanet'] == 'Europa'),'Age'] = 34\n","df.loc[(df['Age'].isna()) & (df['HomePlanet'] == 'Mars'),'Age'] = 29\n","df.loc[(df['Age'].isna()) & (df['HomePlanet'] == 'Earth'),'Age'] = 26"],"metadata":{"id":"A2bxe9gQZdC4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"bAeLHXFmaK70"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["VIP Imputation"],"metadata":{"id":"jc_y85jUafJH"}},{"cell_type":"code","source":["df['VIP'].value_counts()"],"metadata":{"id":"aqKoCMJFaUAI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['VIP'].fillna(False, inplace = True)"],"metadata":{"id":"H54Yq54XaoE5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"tHc8x3PnavsA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["CryoSleep Imputation"],"metadata":{"id":"3X_6p_VXbKci"}},{"cell_type":"code","source":["df['Spent'] = df['RoomService'] + df['FoodCourt'] + df['Spa'] + df['ShoppingMall'] + df['VRDeck']"],"metadata":{"id":"99gUx2PdaxLB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"AVs4AwDubpV1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"pbHL35p_b6qk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["((df['Spent'] == 0) & (df['CryoSleep'].isna())).sum()"],"metadata":{"id":"a0eRemdAbw03"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['Spent'] == 0) & (df['CryoSleep'].isna()), 'CryoSleep'] = True"],"metadata":{"id":"w3rbsbmKcK9x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['Spent'] > 0) & (df['CryoSleep'].isna()), 'CryoSleep'] = False"],"metadata":{"id":"ZNioNpugc0fl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Spend']= df['RoomService']+df['ShoppingMall']+df['Spa']+df['FoodCourt']+df['VRDeck']\n","df.loc[(df['Spend']==0)&(df['CryoSleep'].isna()),'CryoSleep']=True\n","df.loc[((df['FoodCourt']>0)|(df['RoomService']>0)|(df['Spa']>0)|(df['VRDeck']>0)|(df['ShoppingMall']>0))&(df['CryoSleep'].isna()),'CryoSleep']=False\n","df.loc[df['CryoSleep'].isna(),'CryoSleep']=True"],"metadata":{"id":"SDsUfCardcrv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"Rqq2tznoctKP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Imputing Services"],"metadata":{"id":"CKYY8z3lfg6a"}},{"cell_type":"code","source":["df.loc[(df['CryoSleep'] == True) & (df['RoomService'].isna()), 'RoomService'] = 0\n","df.loc[(df['CryoSleep'] == True) & (df['VRDeck'].isna()), 'VRDeck'] = 0\n","df.loc[(df['CryoSleep'] == True) & (df['FoodCourt'].isna()), 'FoodCourt'] = 0\n","df.loc[(df['CryoSleep'] == True) & (df['Spa'].isna()), 'Spa'] = 0\n","df.loc[(df['CryoSleep'] == True) & (df['ShoppingMall'].isna()), 'ShoppingMall'] = 0"],"metadata":{"id":"B5tY0QYUcuXC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[(df['CryoSleep'] == False) & (df['RoomService'].isna()), 'RoomService'] = 351\n","df.loc[(df['CryoSleep'] == False) & (df['VRDeck'].isna()), 'VRDeck'] = 476\n","df.loc[(df['CryoSleep'] == False) & (df['FoodCourt'].isna()), 'FoodCourt'] = 715\n","df.loc[(df['CryoSleep'] == False) & (df['Spa'].isna()), 'Spa'] = 486\n","df.loc[(df['CryoSleep'] == False) & (df['ShoppingMall'].isna()), 'ShoppingMall'] = 270"],"metadata":{"id":"tC4T5u8mg_H9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'RoomService'].mean()"],"metadata":{"id":"VzisIPoFhHFq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'Spa'].mean()"],"metadata":{"id":"sBXp5h3dhd9W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'FoodCourt'].mean()"],"metadata":{"id":"cXSZDbE8hf-3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'ShoppingMall'].mean()"],"metadata":{"id":"T7yOrrJAhim8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.loc[df['CryoSleep'] == False, 'VRDeck'].mean()"],"metadata":{"id":"VLVYN8zKhmwc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"bS9zHeD-fq6-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Saving Imputation"],"metadata":{"id":"sebtHd0Ji2jf"}},{"cell_type":"code","source":["df.to_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train Clean 2.csv',index = False)"],"metadata":{"id":"GY0uQonFi5Zy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["1/30/24"],"metadata":{"id":"ddzyBUkhigGj"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train Clean 2.csv', index_col= False)"],"metadata":{"id":"jHeofsTli47r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"id":"S_iyzWjylSGA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.columns"],"metadata":{"id":"Ev2vmhQWnHOz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = df[['PassengerId', 'HomePlanet', 'CryoSleep', 'Cabin',\n","       'Destination', 'Age', 'VIP', 'RoomService', 'FoodCourt', 'ShoppingMall',\n","       'Spa', 'VRDeck', 'Name', 'Transported', 'Spent', 'Spend']]"],"metadata":{"id":"gWf8FnwgnLvQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Cabin']"],"metadata":{"id":"wJXxWIGpoMUr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[['Level', 'RoomNumber', 'Side']] = df['Cabin'].str.split('/',expand = True)"],"metadata":{"id":"J8hbRULXoe67"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"aXh1dIUDpUZY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"id":"xEu-mveApXaF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Side'].fillna('M', inplace=True)"],"metadata":{"id":"jMkmZsPIpmx4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['RoomNumber'].fillna('-1',inplace = True)"],"metadata":{"id":"SZx_ictfqOE3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Level'].fillna('M', inplace = True)"],"metadata":{"id":"w_G_pfEoqlCd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"id":"7OJcNhKgqk8J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Side'].unique()"],"metadata":{"id":"xOKKqAKGq791"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["s_dict = {'P':0, 'S':1 ,'M':3}"],"metadata":{"id":"gFcMiC4mrAbF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['ShipSide'] = df['Side'].map(s_dict)"],"metadata":{"id":"6H3NCiFErSfq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Level'].unique()"],"metadata":{"id":"DeONB9_-rcF0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["l_dict = {'B': 0, 'F': 1, 'A': 2, 'G': 3, 'M': 4, 'E': 5, 'D': 6, 'C': 7, 'T': 8}"],"metadata":{"id":"oBoZfCJtr0FX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['ShipLevel'] = df['Level'].map(l_dict)"],"metadata":{"id":"kzbwmLwar4dI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['RoomNumber'] = df['RoomNumber'].astype(float)"],"metadata":{"id":"ZbfRxboKsFTF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Passenger Id Feat Engineering"],"metadata":{"id":"128cWSqctwmc"}},{"cell_type":"code","source":["df['PassengerId']"],"metadata":{"id":"RpYrJg-ottC0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[['GroupCode', 'ID']] = df['PassengerId'].str.split('_', expand = True).astype(int)"],"metadata":{"id":"FQEIZxUtt4Qt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["homeplanet = {'Europa':0,'Earth':1,'Mars':2}\n","df['HomePlanet'] = df['HomePlanet'].map(homeplanet)"],"metadata":{"id":"b4xbk-sAupN1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d_destionation = {'TRAPPIST-1e':0,'PSO J318.5-22':1,'55 Cancri e':2}"],"metadata":{"id":"VLB5ilTyvgdu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Destination'] = df['Destination'].map(d_destionation)"],"metadata":{"id":"K0cdL2mYvpqr","executionInfo":{"status":"error","timestamp":1738268895152,"user_tz":300,"elapsed":2,"user":{"displayName":"Andres Azqueta","userId":"15441593609568128522"}},"outputId":"cbdfaab9-84ae-43c3-a57a-8db0ff527cce","colab":{"base_uri":"https://localhost:8080/","height":144}},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-647bf8683b58>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Destination'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Destination'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0md_destionation\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}]},{"cell_type":"markdown","source":["Machine Learing"],"metadata":{"id":"dAPTax0Ji1bT"}},{"cell_type":"code","source":["df.dtypes"],"metadata":{"id":"jsJfS17sxzey"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.columns"],"metadata":{"id":"LeOdDaQYtfGS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["features = ['HomePlanet', 'CryoSleep', 'Destination', 'Age',\n","       'VIP', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck', 'Spent', 'RoomNumber',\n","       'ShipSide', 'ShipLevel', 'GroupCode', 'ID']\n","X = df[features]\n","y= df['Transported']\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = .2, random_state=1)"],"metadata":{"id":"PPaOrcCkgLUq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# import the class\n","from sklearn.ensemble import RandomForestClassifier\n","#instantiate the model\n","rfc = RandomForestClassifier()\n","# fit the model with data\n","rfc.fit(X_train,y_train)"],"metadata":{"id":"g0xDu8rQkw2x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = rfc.predict(X_test)\n","# accuracy score is for classification\n","from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, y_pred)"],"metadata":{"id":"nCFveFhtxtNm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.feature_selection import RFE\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import cross_val_score\n","\n","# Define the model for feature selection\n","estimator = RandomForestClassifier()\n","\n","# Initialize RFE\n","rfe = RFE(estimator, n_features_to_select=5, step=1)\n","\n","# Fit RFE\n","rfe.fit(X_train, y_train)\n","\n","# Get selected features\n","selected_features = [feature for idx, feature in enumerate(features) if rfe.support_[idx]]\n","\n","print(\"Selected Features:\", selected_features)\n"],"metadata":{"id":"0KwWPBDTzwWz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["features = ['Age', 'Spa', 'Spent', 'RoomNumber', 'GroupCode']\n","X = df[features]\n","y= df['Transported']\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = .2, random_state=1)"],"metadata":{"id":"cLSmec8azwut"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.to_csv('/content/drive/MyDrive/Applied Data Science/Data/Spaceship Titanic train clean3.csv',index = False)"],"metadata":{"id":"LEzB8TJ30yue"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"12Y5sGyuZ2ozLRIEYIM7yuV-nF5CyHnoS","timestamp":1738267992514}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}