{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1CLPALtpMFJSKYiCRo9xYhQj4rT7DHqZ_","timestamp":1699884974540}],"mount_file_id":"1WxqW30B2SWJM26N-C2fLkGPf0x8-U74X","authorship_tag":"ABX9TyOuSR5mKFNZBS2Zw9EfAyYy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Merging the data sets"],"metadata":{"id":"JAl7CwksDGnU"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"j63l1wbiAN19","executionInfo":{"status":"ok","timestamp":1700242493803,"user_tz":300,"elapsed":1746,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["FDraft = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/NFL Draft 2018.csv')"],"metadata":{"id":"qXWtULlCBJIB","executionInfo":{"status":"ok","timestamp":1700242494773,"user_tz":300,"elapsed":973,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["SDraft = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/NFL Draft 2019.csv')"],"metadata":{"id":"7K2YoPqsBfmC","executionInfo":{"status":"ok","timestamp":1700242495382,"user_tz":300,"elapsed":611,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["TDraft = pd.read_csv('/content/drive/MyDrive/Applied Data Science/Data/NFL Draft 2020.csv')"],"metadata":{"id":"8ooLiRAyBozc","executionInfo":{"status":"ok","timestamp":1700242495977,"user_tz":300,"elapsed":598,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["Draft = pd.concat([FDraft, SDraft, TDraft], axis=0, ignore_index=True)"],"metadata":{"id":"f0qB0QfYB0SD","executionInfo":{"status":"ok","timestamp":1700242495978,"user_tz":300,"elapsed":10,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["Draft.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"8qvCqc8OC35Z","executionInfo":{"status":"ok","timestamp":1700242495978,"user_tz":300,"elapsed":9,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"7fe10918-f63a-4786-8f8f-7f1097993184"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rnd  Pick   Tm          Player Pos   Age      To  AP1   PB   St  ...  \\\n","0  1.0   1.0  CLE  Baker Mayfield  QB  23.0  2023.0  0.0  0.0  4.0  ...   \n","1  1.0   2.0  NYG  Saquon Barkley  RB  21.0  2023.0  0.0  2.0  4.0  ...   \n","2  1.0   3.0  NYJ     Sam Darnold  QB  21.0  2023.0  0.0  0.0  4.0  ...   \n","3  1.0   4.0  CLE     Denzel Ward  CB  21.0  2023.0  0.0  2.0  5.0  ...   \n","4  1.0   5.0  DEN   Bradley Chubb  DE  22.0  2023.0  0.0  2.0  2.0  ...   \n","\n","   Rush Yds  Rush TD    Rec  Rec Yds  Rec TD   Solo  Int.1    Sk  \\\n","0     778.0      6.0    1.0     17.0     0.0    1.0    NaN   NaN   \n","1    4661.0     30.0  266.0   1907.0    10.0    NaN    NaN   NaN   \n","2     740.0     12.0    0.0      0.0     0.0    NaN    NaN   NaN   \n","3       0.0      0.0    0.0      0.0     0.0  212.0   14.0   0.5   \n","4       0.0      0.0    0.0      0.0     0.0  137.0    1.0  33.5   \n","\n","         College/Univ    Year  \n","0            Oklahoma  2018.0  \n","1            Penn St.  2018.0  \n","2                 USC  2018.0  \n","3            Ohio St.  2018.0  \n","4  North Carolina St.  2018.0  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-38e296ac-82c6-498a-8449-625ef03fa0f6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rnd</th>\n","      <th>Pick</th>\n","      <th>Tm</th>\n","      <th>Player</th>\n","      <th>Pos</th>\n","      <th>Age</th>\n","      <th>To</th>\n","      <th>AP1</th>\n","      <th>PB</th>\n","      <th>St</th>\n","      <th>...</th>\n","      <th>Rush Yds</th>\n","      <th>Rush TD</th>\n","      <th>Rec</th>\n","      <th>Rec Yds</th>\n","      <th>Rec TD</th>\n","      <th>Solo</th>\n","      <th>Int.1</th>\n","      <th>Sk</th>\n","      <th>College/Univ</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>CLE</td>\n","      <td>Baker Mayfield</td>\n","      <td>QB</td>\n","      <td>23.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>778.0</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","      <td>17.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Oklahoma</td>\n","      <td>2018.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>NYG</td>\n","      <td>Saquon Barkley</td>\n","      <td>RB</td>\n","      <td>21.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>4661.0</td>\n","      <td>30.0</td>\n","      <td>266.0</td>\n","      <td>1907.0</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Penn St.</td>\n","      <td>2018.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>NYJ</td>\n","      <td>Sam Darnold</td>\n","      <td>QB</td>\n","      <td>21.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>740.0</td>\n","      <td>12.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>USC</td>\n","      <td>2018.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>CLE</td>\n","      <td>Denzel Ward</td>\n","      <td>CB</td>\n","      <td>21.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>212.0</td>\n","      <td>14.0</td>\n","      <td>0.5</td>\n","      <td>Ohio St.</td>\n","      <td>2018.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>DEN</td>\n","      <td>Bradley Chubb</td>\n","      <td>DE</td>\n","      <td>22.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>137.0</td>\n","      <td>1.0</td>\n","      <td>33.5</td>\n","      <td>North Carolina St.</td>\n","      <td>2018.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38e296ac-82c6-498a-8449-625ef03fa0f6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38e296ac-82c6-498a-8449-625ef03fa0f6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38e296ac-82c6-498a-8449-625ef03fa0f6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8d8e9398-690e-4a40-b451-39c4399d820a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8d8e9398-690e-4a40-b451-39c4399d820a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8d8e9398-690e-4a40-b451-39c4399d820a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["# What position has been selected the most?"],"metadata":{"id":"0J9YZUYUDFKb"}},{"cell_type":"code","source":["Draft['Pos'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5_83C7gyC6F-","executionInfo":{"status":"ok","timestamp":1700242495978,"user_tz":300,"elapsed":8,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"d790d5f3-a93d-48d9-e448-56b4d66bc6a9"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["WR     97\n","CB     86\n","LB     79\n","DE     67\n","T      65\n","RB     64\n","DT     63\n","S      62\n","TE     43\n","G      38\n","QB     37\n","C      22\n","OLB    13\n","ILB    11\n","P       8\n","K       7\n","LS      3\n","Name: Pos, dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["Draft.loc[Draft['Year'] == 2018, 'Pos'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4FDYB0JNDW3t","executionInfo":{"status":"ok","timestamp":1700242495978,"user_tz":300,"elapsed":6,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"6a863031-ef06-4240-a415-75209b50cd8b"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["WR     34\n","CB     28\n","DT     22\n","DE     22\n","T      21\n","RB     21\n","S      18\n","TE     15\n","LB     14\n","QB     13\n","OLB    13\n","ILB    11\n","C       9\n","G       8\n","P       4\n","K       2\n","LS      1\n","Name: Pos, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["Draft.loc[Draft['Year'] == 2019, 'Pos'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w5QfIfa2DsbZ","executionInfo":{"status":"ok","timestamp":1700242496282,"user_tz":300,"elapsed":308,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"2d545d29-7cd6-4e56-a939-c9d811e98137"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LB    32\n","CB    32\n","WR    28\n","RB    25\n","DE    24\n","T     22\n","DT    21\n","S     20\n","TE    16\n","G     13\n","QB    11\n","C      5\n","P      2\n","K      2\n","LS     1\n","Name: Pos, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["Draft.loc[Draft['Year'] == 2020, 'Pos'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hk2rG2m9EBqp","executionInfo":{"status":"ok","timestamp":1700242496282,"user_tz":300,"elapsed":5,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"7be4b039-0804-4a7b-ba47-f1f03544dfa6"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["WR    35\n","LB    33\n","CB    26\n","S     24\n","T     22\n","DE    21\n","DT    20\n","RB    18\n","G     17\n","QB    13\n","TE    12\n","C      8\n","K      3\n","P      2\n","LS     1\n","Name: Pos, dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Filter data for the top twelve positions\n","top_positions = Draft['Pos'].value_counts().head(12).index\n","\n","# Filter the DataFrame for the top positions and group by year\n","filtered_data = Draft[Draft['Pos'].isin(top_positions)].groupby(['Year', 'Pos']).size().unstack(fill_value=0)\n","\n","# Plotting\n","fig, ax = plt.subplots(figsize=(10, 6))\n","\n","# Plot line graphs for each position\n","for pos in filtered_data.columns:\n","    ax.plot(filtered_data.index, filtered_data[pos], marker='o', label=pos)\n","\n","ax.set_xlabel('Year')\n","ax.set_ylabel('Counts')\n","ax.set_title('Top Twelve Positions Counts Over the Years')\n","ax.legend(title='Position', bbox_to_anchor=(1.05, 1), loc='upper left')\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"L0WKLJHXE9yf","executionInfo":{"status":"ok","timestamp":1700242497966,"user_tz":300,"elapsed":1686,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"335b85fe-8d35-498a-f53a-aa665e8a643d"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["What team has had the most success in the draft?"],"metadata":{"id":"5P9m_szCF82D"}},{"cell_type":"markdown","source":["# Most First Team all Pros by team"],"metadata":{"id":"8A3-UVy4GGyx"}},{"cell_type":"code","source":["Draft.groupby('Tm')['AP1'].sum().sort_values(ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7OjeLHHGGF5r","executionInfo":{"status":"ok","timestamp":1700242497966,"user_tz":300,"elapsed":14,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"168e2114-8180-4f18-c79a-7af98a4fe86a"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Tm\n","IND    7.0\n","MIA    4.0\n","SFO    4.0\n","BAL    3.0\n","MIN    2.0\n","NWE    2.0\n","NYJ    1.0\n","OAK    1.0\n","LAC    1.0\n","DAL    1.0\n","SEA    1.0\n","CHI    1.0\n","TAM    1.0\n","PHI    0.0\n","NYG    0.0\n","TEN    0.0\n","NOR    0.0\n","PIT    0.0\n","ARI    0.0\n","LVR    0.0\n","LAR    0.0\n","ATL    0.0\n","KAN    0.0\n","JAX    0.0\n","HOU    0.0\n","GNB    0.0\n","DET    0.0\n","DEN    0.0\n","CLE    0.0\n","CIN    0.0\n","CAR    0.0\n","BUF    0.0\n","WAS    0.0\n","Name: AP1, dtype: float64"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["# Most Pro Bowls"],"metadata":{"id":"6JIFJvk_GiEm"}},{"cell_type":"code","source":["Draft.groupby('Tm')['PB'].sum().sort_values(ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ETUz-wEMGXa8","executionInfo":{"status":"ok","timestamp":1700242497966,"user_tz":300,"elapsed":9,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"988265e7-396b-4e12-a7b9-ad4d2b3a0c3f"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Tm\n","BAL    11.0\n","IND     9.0\n","BUF     8.0\n","DAL     7.0\n","TAM     6.0\n","SFO     6.0\n","CLE     6.0\n","TEN     5.0\n","DET     5.0\n","OAK     5.0\n","LAC     4.0\n","GNB     4.0\n","MIN     4.0\n","MIA     3.0\n","PHI     3.0\n","NYG     3.0\n","WAS     3.0\n","DEN     3.0\n","JAX     2.0\n","SEA     2.0\n","CAR     2.0\n","ARI     2.0\n","ATL     1.0\n","KAN     1.0\n","NWE     1.0\n","NYJ     1.0\n","PIT     1.0\n","CIN     1.0\n","CHI     1.0\n","LAR     0.0\n","LVR     0.0\n","NOR     0.0\n","HOU     0.0\n","Name: PB, dtype: float64"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["# Average Time That a Player Starts for (Value used)"],"metadata":{"id":"RxijjZO5H1Qu"}},{"cell_type":"code","source":["Draft.groupby('Tm')['St'].mean().sort_values(ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XlaIAYkpHqqC","executionInfo":{"status":"ok","timestamp":1700242850965,"user_tz":300,"elapsed":252,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"bf317bbb-5f46-45aa-f9b5-30c130942b17"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Tm\n","CHI    1.578947\n","OAK    1.555556\n","BUF    1.521739\n","TEN    1.500000\n","MIA    1.480000\n","TAM    1.478261\n","CLE    1.434783\n","SFO    1.363636\n","NYG    1.346154\n","DAL    1.250000\n","CAR    1.227273\n","BAL    1.200000\n","LAC    1.200000\n","CIN    1.142857\n","JAX    1.115385\n","ATL    1.105263\n","IND    1.100000\n","PIT    1.090909\n","ARI    1.086957\n","NOR    1.062500\n","PHI    1.050000\n","DEN    0.961538\n","DET    0.958333\n","WAS    0.923077\n","NYJ    0.904762\n","KAN    0.833333\n","GNB    0.821429\n","HOU    0.800000\n","MIN    0.771429\n","SEA    0.750000\n","LAR    0.714286\n","NWE    0.655172\n","LVR    0.428571\n","Name: St, dtype: float64"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["# Games Played Average per Team"],"metadata":{"id":"wdWNliEMJM1s"}},{"cell_type":"code","source":["Draft.groupby('Tm')['G'].mean().sort_values(ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6f7FHBzEJJ62","executionInfo":{"status":"ok","timestamp":1700242858642,"user_tz":300,"elapsed":213,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"1baa772f-33b1-4ecd-e603-9b3d8ba7efef"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Tm\n","BUF    57.333333\n","TAM    53.363636\n","SFO    51.571429\n","LAC    49.263158\n","OAK    48.176471\n","MIA    47.880000\n","BAL    47.827586\n","SEA    47.461538\n","KAN    47.222222\n","ATL    47.111111\n","PHI    46.631579\n","JAX    46.120000\n","CLE    45.500000\n","MIN    45.225806\n","NYG    45.208333\n","CHI    45.111111\n","CIN    44.375000\n","GNB    43.120000\n","DAL    43.045455\n","IND    42.633333\n","CAR    42.619048\n","PIT    42.571429\n","NOR    41.733333\n","TEN    41.666667\n","DEN    41.038462\n","ARI    40.952381\n","HOU    40.842105\n","NYJ    40.789474\n","LAR    40.392857\n","NWE    40.240000\n","DET    39.782609\n","WAS    39.640000\n","LVR    28.714286\n","Name: G, dtype: float64"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["# Calculation of more Stats"],"metadata":{"id":"Max7enkYJtFp"}},{"cell_type":"code","source":["Draft.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cDEUwcW2Ltz3","executionInfo":{"status":"ok","timestamp":1700242498252,"user_tz":300,"elapsed":17,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"e81fc715-ef0e-46c8-9f88-6a3fbc58b968"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Rnd             float64\n","Pick            float64\n","Tm               object\n","Player           object\n","Pos              object\n","Age             float64\n","To              float64\n","AP1             float64\n","PB              float64\n","St              float64\n","wAV             float64\n","DrAV            float64\n","G               float64\n","Cmp             float64\n","Pass Att        float64\n","Pass Yds        float64\n","Pass TD         float64\n","Int             float64\n","Rush Att        float64\n","Rush Yds        float64\n","Rush TD         float64\n","Rec             float64\n","Rec Yds         float64\n","Rec TD          float64\n","Solo            float64\n","Int.1           float64\n","Sk              float64\n","College/Univ     object\n","Year            float64\n","dtype: object"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["Draft['Cmp%'] = (Draft['Cmp']) / (Draft['Pass Att']) * 100"],"metadata":{"id":"2e3o-QH-IPjA","executionInfo":{"status":"ok","timestamp":1700242498253,"user_tz":300,"elapsed":14,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["Draft['YPC'] = (Draft['Rush Yds']) / (Draft['Rush Att'])"],"metadata":{"id":"YswU1cOpMm8d","executionInfo":{"status":"ok","timestamp":1700242498253,"user_tz":300,"elapsed":14,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["Draft['YPR'] = (Draft['Rec Yds']) / (Draft['Rec'])"],"metadata":{"id":"a2PYHw17MfSc","executionInfo":{"status":"ok","timestamp":1700242498253,"user_tz":300,"elapsed":13,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["Draft['YPT'] = Draft['Pass Yds'] / Draft['Cmp']"],"metadata":{"id":"zkdWLiz71D-n","executionInfo":{"status":"ok","timestamp":1700242498253,"user_tz":300,"elapsed":13,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["Draft.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"nQt_XkXqKZHF","executionInfo":{"status":"ok","timestamp":1700242498253,"user_tz":300,"elapsed":13,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"44fb96f3-ef02-430d-dcba-51dfad482cfa"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rnd  Pick   Tm          Player Pos   Age      To  AP1   PB   St  ...  \\\n","0  1.0   1.0  CLE  Baker Mayfield  QB  23.0  2023.0  0.0  0.0  4.0  ...   \n","1  1.0   2.0  NYG  Saquon Barkley  RB  21.0  2023.0  0.0  2.0  4.0  ...   \n","2  1.0   3.0  NYJ     Sam Darnold  QB  21.0  2023.0  0.0  0.0  4.0  ...   \n","3  1.0   4.0  CLE     Denzel Ward  CB  21.0  2023.0  0.0  2.0  5.0  ...   \n","4  1.0   5.0  DEN   Bradley Chubb  DE  22.0  2023.0  0.0  2.0  2.0  ...   \n","\n","   Rec TD   Solo  Int.1    Sk        College/Univ    Year       Cmp%  \\\n","0     0.0    1.0    NaN   NaN            Oklahoma  2018.0  61.636727   \n","1    10.0    NaN    NaN   NaN            Penn St.  2018.0        NaN   \n","2     0.0    NaN    NaN   NaN                 USC  2018.0  59.739524   \n","3     0.0  212.0   14.0   0.5            Ohio St.  2018.0        NaN   \n","4     0.0  137.0    1.0  33.5  North Carolina St.  2018.0        NaN   \n","\n","        YPC        YPR        YPT  \n","0  3.536364  17.000000  11.585492  \n","1  4.380639   7.169173        NaN  \n","2  3.834197        NaN  11.154502  \n","3       NaN        NaN        NaN  \n","4       NaN        NaN        NaN  \n","\n","[5 rows x 33 columns]"],"text/html":["\n","  <div id=\"df-9c3ca159-014b-4aef-9508-674d25f6c026\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rnd</th>\n","      <th>Pick</th>\n","      <th>Tm</th>\n","      <th>Player</th>\n","      <th>Pos</th>\n","      <th>Age</th>\n","      <th>To</th>\n","      <th>AP1</th>\n","      <th>PB</th>\n","      <th>St</th>\n","      <th>...</th>\n","      <th>Rec TD</th>\n","      <th>Solo</th>\n","      <th>Int.1</th>\n","      <th>Sk</th>\n","      <th>College/Univ</th>\n","      <th>Year</th>\n","      <th>Cmp%</th>\n","      <th>YPC</th>\n","      <th>YPR</th>\n","      <th>YPT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>CLE</td>\n","      <td>Baker Mayfield</td>\n","      <td>QB</td>\n","      <td>23.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Oklahoma</td>\n","      <td>2018.0</td>\n","      <td>61.636727</td>\n","      <td>3.536364</td>\n","      <td>17.000000</td>\n","      <td>11.585492</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>NYG</td>\n","      <td>Saquon Barkley</td>\n","      <td>RB</td>\n","      <td>21.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Penn St.</td>\n","      <td>2018.0</td>\n","      <td>NaN</td>\n","      <td>4.380639</td>\n","      <td>7.169173</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>NYJ</td>\n","      <td>Sam Darnold</td>\n","      <td>QB</td>\n","      <td>21.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>USC</td>\n","      <td>2018.0</td>\n","      <td>59.739524</td>\n","      <td>3.834197</td>\n","      <td>NaN</td>\n","      <td>11.154502</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>CLE</td>\n","      <td>Denzel Ward</td>\n","      <td>CB</td>\n","      <td>21.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>212.0</td>\n","      <td>14.0</td>\n","      <td>0.5</td>\n","      <td>Ohio St.</td>\n","      <td>2018.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>DEN</td>\n","      <td>Bradley Chubb</td>\n","      <td>DE</td>\n","      <td>22.0</td>\n","      <td>2023.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>137.0</td>\n","      <td>1.0</td>\n","      <td>33.5</td>\n","      <td>North Carolina St.</td>\n","      <td>2018.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 33 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c3ca159-014b-4aef-9508-674d25f6c026')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c3ca159-014b-4aef-9508-674d25f6c026 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c3ca159-014b-4aef-9508-674d25f6c026');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-704da05e-1533-4d69-84ae-10f591a8542f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-704da05e-1533-4d69-84ae-10f591a8542f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-704da05e-1533-4d69-84ae-10f591a8542f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# 2018 Draft Players Have more time in the league which = more stats\n","Draft['Pass Yds PG'] = (Draft['Pass Yds']) / (Draft['G'])\n","Draft['Rec Yds PG'] = (Draft['Rec Yds']) / (Draft['G'])\n","Draft['Rush Yds PG'] = (Draft['Rush Yds']) / (Draft['G'])"],"metadata":{"id":"ZPiSNERrA3KG","executionInfo":{"status":"ok","timestamp":1700242498253,"user_tz":300,"elapsed":12,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["# Pos Efficiency Draft Analysis"],"metadata":{"id":"gqn3KFQh_tmX"}},{"cell_type":"code","source":["# All must include a min of 50 attempts so that there is a reasonable set of data to remove outliers\n","Draft.loc[(Draft['Pos'] == 'QB') & (Draft['Cmp']>=50), ['Pass Yds PG', 'Pick', 'Player', 'Tm','St']].sort_values('Pass Yds PG',ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"89cMY423K4Ex","executionInfo":{"status":"ok","timestamp":1700249461386,"user_tz":300,"elapsed":425,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"13e6401e-cf80-46dc-ca06-5de7aa9f0d8e"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pass Yds PG   Pick              Player   Tm   St\n","515   285.339286    6.0      Justin Herbert  LAC  3.0\n","510   271.163265    1.0          Joe Burrow  CIN  3.0\n","256   242.947368    1.0        Kyler Murray  ARI  4.0\n","6     241.905882    7.0          Josh Allen  BUF  5.0\n","514   237.068182    5.0      Tua Tagovailoa  MIA  3.0\n","0     226.430380    1.0      Baker Mayfield  CLE  4.0\n","170   221.200000  171.0          Mike White  DAL  0.0\n","261   211.644068    6.0        Daniel Jones  NYG  4.0\n","698   208.000000  189.0          Jake Luton  JAX  0.0\n","433   200.800000  178.0  Gardner Minshew II  JAX  2.0\n","2     196.133333    3.0         Sam Darnold  NYJ  4.0\n","297   192.120000   42.0           Drew Lock  DEN  1.0\n","562   189.547170   53.0         Jalen Hurts  PHI  2.0\n","31    179.179487   32.0       Lamar Jackson  BAL  4.0\n","270   175.250000   15.0      Dwayne Haskins  WAS  0.0\n","75    139.176471   76.0       Mason Rudolph  PIT  1.0\n","535   123.411765   26.0         Jordan Love  GNB  0.0\n","9     119.333333   10.0          Josh Rosen  ARI  1.0\n","359    79.750000  104.0         Ryan Finley  CIN  0.0\n","388    71.230769  133.0     Jarrett Stidham  NWE  0.0"],"text/html":["\n","  <div id=\"df-d9a47571-625c-4828-a7ec-fab697cf5cc1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pass Yds PG</th>\n","      <th>Pick</th>\n","      <th>Player</th>\n","      <th>Tm</th>\n","      <th>St</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>515</th>\n","      <td>285.339286</td>\n","      <td>6.0</td>\n","      <td>Justin Herbert</td>\n","      <td>LAC</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>510</th>\n","      <td>271.163265</td>\n","      <td>1.0</td>\n","      <td>Joe Burrow</td>\n","      <td>CIN</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>256</th>\n","      <td>242.947368</td>\n","      <td>1.0</td>\n","      <td>Kyler Murray</td>\n","      <td>ARI</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>241.905882</td>\n","      <td>7.0</td>\n","      <td>Josh Allen</td>\n","      <td>BUF</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>514</th>\n","      <td>237.068182</td>\n","      <td>5.0</td>\n","      <td>Tua Tagovailoa</td>\n","      <td>MIA</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>226.430380</td>\n","      <td>1.0</td>\n","      <td>Baker Mayfield</td>\n","      <td>CLE</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>221.200000</td>\n","      <td>171.0</td>\n","      <td>Mike White</td>\n","      <td>DAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>261</th>\n","      <td>211.644068</td>\n","      <td>6.0</td>\n","      <td>Daniel Jones</td>\n","      <td>NYG</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>698</th>\n","      <td>208.000000</td>\n","      <td>189.0</td>\n","      <td>Jake Luton</td>\n","      <td>JAX</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>433</th>\n","      <td>200.800000</td>\n","      <td>178.0</td>\n","      <td>Gardner Minshew II</td>\n","      <td>JAX</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>196.133333</td>\n","      <td>3.0</td>\n","      <td>Sam Darnold</td>\n","      <td>NYJ</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>192.120000</td>\n","      <td>42.0</td>\n","      <td>Drew Lock</td>\n","      <td>DEN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>562</th>\n","      <td>189.547170</td>\n","      <td>53.0</td>\n","      <td>Jalen Hurts</td>\n","      <td>PHI</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>179.179487</td>\n","      <td>32.0</td>\n","      <td>Lamar Jackson</td>\n","      <td>BAL</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>175.250000</td>\n","      <td>15.0</td>\n","      <td>Dwayne Haskins</td>\n","      <td>WAS</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>139.176471</td>\n","      <td>76.0</td>\n","      <td>Mason Rudolph</td>\n","      <td>PIT</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>535</th>\n","      <td>123.411765</td>\n","      <td>26.0</td>\n","      <td>Jordan Love</td>\n","      <td>GNB</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>119.333333</td>\n","      <td>10.0</td>\n","      <td>Josh Rosen</td>\n","      <td>ARI</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>359</th>\n","      <td>79.750000</td>\n","      <td>104.0</td>\n","      <td>Ryan Finley</td>\n","      <td>CIN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>388</th>\n","      <td>71.230769</td>\n","      <td>133.0</td>\n","      <td>Jarrett Stidham</td>\n","      <td>NWE</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9a47571-625c-4828-a7ec-fab697cf5cc1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9a47571-625c-4828-a7ec-fab697cf5cc1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9a47571-625c-4828-a7ec-fab697cf5cc1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c145de5a-c152-4fbe-9adb-10cd6a9d493b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c145de5a-c152-4fbe-9adb-10cd6a9d493b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c145de5a-c152-4fbe-9adb-10cd6a9d493b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["# There are Rushing QBs like Jalen Hurts and Lamar that would be misrepresented\n","Draft.loc[(Draft['Pos'] == 'QB') & (Draft['Cmp']>=50) & (Draft['Rush Att']>=10), ['Rush Yds PG', 'Pick', 'Player', 'Tm','St']].sort_values('Rush Yds PG',ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"L8yqe9JXFw81","executionInfo":{"status":"ok","timestamp":1700242498561,"user_tz":300,"elapsed":318,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"581c47b5-eea0-4fb5-f7d1-722bce99b91e"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Rush Yds PG   Pick              Player   Tm   St\n","31     61.756410   32.0       Lamar Jackson  BAL  4.0\n","562    41.094340   53.0         Jalen Hurts  PHI  2.0\n","256    38.666667    1.0        Kyler Murray  ARI  4.0\n","6      38.541176    7.0          Josh Allen  BUF  5.0\n","261    32.288136    6.0        Daniel Jones  NYG  4.0\n","359    17.875000  104.0         Ryan Finley  CIN  0.0\n","433    14.025000  178.0  Gardner Minshew II  JAX  2.0\n","515    13.642857    6.0      Justin Herbert  LAC  3.0\n","2      12.333333    3.0         Sam Darnold  NYJ  4.0\n","297    11.840000   42.0           Drew Lock  DEN  1.0\n","510    11.714286    1.0          Joe Burrow  CIN  3.0\n","535    11.176471   26.0         Jordan Love  GNB  0.0\n","0       9.848101    1.0      Baker Mayfield  CLE  4.0\n","270     9.187500   15.0      Dwayne Haskins  WAS  0.0\n","514     7.568182    5.0      Tua Tagovailoa  MIA  3.0\n","388     6.846154  133.0     Jarrett Stidham  NWE  0.0\n","9       6.291667   10.0          Josh Rosen  ARI  1.0\n","75      5.235294   76.0       Mason Rudolph  PIT  1.0\n","170     0.300000  171.0          Mike White  DAL  0.0"],"text/html":["\n","  <div id=\"df-c0eb8a3e-be0f-40fb-8e44-4b215f034204\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rush Yds PG</th>\n","      <th>Pick</th>\n","      <th>Player</th>\n","      <th>Tm</th>\n","      <th>St</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>31</th>\n","      <td>61.756410</td>\n","      <td>32.0</td>\n","      <td>Lamar Jackson</td>\n","      <td>BAL</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>562</th>\n","      <td>41.094340</td>\n","      <td>53.0</td>\n","      <td>Jalen Hurts</td>\n","      <td>PHI</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>256</th>\n","      <td>38.666667</td>\n","      <td>1.0</td>\n","      <td>Kyler Murray</td>\n","      <td>ARI</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>38.541176</td>\n","      <td>7.0</td>\n","      <td>Josh Allen</td>\n","      <td>BUF</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>261</th>\n","      <td>32.288136</td>\n","      <td>6.0</td>\n","      <td>Daniel Jones</td>\n","      <td>NYG</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>359</th>\n","      <td>17.875000</td>\n","      <td>104.0</td>\n","      <td>Ryan Finley</td>\n","      <td>CIN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>433</th>\n","      <td>14.025000</td>\n","      <td>178.0</td>\n","      <td>Gardner Minshew II</td>\n","      <td>JAX</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>515</th>\n","      <td>13.642857</td>\n","      <td>6.0</td>\n","      <td>Justin Herbert</td>\n","      <td>LAC</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12.333333</td>\n","      <td>3.0</td>\n","      <td>Sam Darnold</td>\n","      <td>NYJ</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>11.840000</td>\n","      <td>42.0</td>\n","      <td>Drew Lock</td>\n","      <td>DEN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>510</th>\n","      <td>11.714286</td>\n","      <td>1.0</td>\n","      <td>Joe Burrow</td>\n","      <td>CIN</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>535</th>\n","      <td>11.176471</td>\n","      <td>26.0</td>\n","      <td>Jordan Love</td>\n","      <td>GNB</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>9.848101</td>\n","      <td>1.0</td>\n","      <td>Baker Mayfield</td>\n","      <td>CLE</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>9.187500</td>\n","      <td>15.0</td>\n","      <td>Dwayne Haskins</td>\n","      <td>WAS</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>514</th>\n","      <td>7.568182</td>\n","      <td>5.0</td>\n","      <td>Tua Tagovailoa</td>\n","      <td>MIA</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>388</th>\n","      <td>6.846154</td>\n","      <td>133.0</td>\n","      <td>Jarrett Stidham</td>\n","      <td>NWE</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>6.291667</td>\n","      <td>10.0</td>\n","      <td>Josh Rosen</td>\n","      <td>ARI</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>5.235294</td>\n","      <td>76.0</td>\n","      <td>Mason Rudolph</td>\n","      <td>PIT</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>0.300000</td>\n","      <td>171.0</td>\n","      <td>Mike White</td>\n","      <td>DAL</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0eb8a3e-be0f-40fb-8e44-4b215f034204')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c0eb8a3e-be0f-40fb-8e44-4b215f034204 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c0eb8a3e-be0f-40fb-8e44-4b215f034204');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4e063bc9-7ed2-4650-81a7-4c41d90a35a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e063bc9-7ed2-4650-81a7-4c41d90a35a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4e063bc9-7ed2-4650-81a7-4c41d90a35a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["# Runningback Yds Per Game Value"],"metadata":{"id":"xCBUzWuzIbeP"}},{"cell_type":"code","source":["# The Same for Runningbacks\n","Draft.loc[(Draft['Pos'] == 'RB') & (Draft['Rush Att']>=50), ['Rush Yds PG', 'Pick', 'Player', 'Tm','St']].sort_values('Rush Yds PG',ascending = False)"],"metadata":{"id":"_DOGYW6XLePn","executionInfo":{"status":"ok","timestamp":1700242498561,"user_tz":300,"elapsed":14,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"651188ff-7871-4d8b-c56a-96167fad8eec"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Rush Yds PG   Pick                 Player   Tm   St\n","550    86.127660   41.0        Jonathan Taylor  IND  3.0\n","34     84.558442   35.0             Nick Chubb  CLE  5.0\n","279    75.705882   24.0            Josh Jacobs  OAK  4.0\n","1      71.707692    2.0         Saquon Barkley  NYG  4.0\n","308    61.873016   53.0          Miles Sanders  PHI  4.0\n","328    61.446154   73.0       David Montgomery  CHI  3.0\n","235    58.285714  236.0          Bo Scarbrough  DAL  0.0\n","564    56.125000   55.0           J.K. Dobbins  BAL  0.0\n","30     49.892308   31.0            Sony Michel  NWE  2.0\n","342    49.727273   87.0          Damien Harris  NWE  3.0\n","329    49.029412   74.0       Devin Singletary  BUF  4.0\n","544    46.895833   35.0          D'Andre Swift  DET  0.0\n","575    46.566038   66.0         Antonio Gibson  WAS  2.0\n","26     44.813953   27.0          Rashaad Penny  SEA  0.0\n","561    44.457143   52.0              Cam Akers  LAR  1.0\n","383    44.043478  128.0           Tony Pollard  DAL  0.0\n","541    42.219512   32.0  Clyde Edwards-Helaire  KAN  1.0\n","595    40.673913   86.0              Zack Moss  BUF  0.0\n","571    40.019231   62.0              AJ Dillon  GNB  0.0\n","37     36.786885   38.0        Ronald Jones II  TAM  2.0\n","325    35.269231   70.0      Darrell Henderson  LAR  1.0\n","42     35.000000   43.0        Kerryon Johnson  DET  1.0\n","489    33.875000  234.0           Myles Gaskin  MIA  1.0\n","357    30.746269  102.0     Alexander Mattison  MIN  0.0\n","133    24.945205  134.0          Chase Edmonds  ARI  1.0\n","621    23.818182  112.0          Joshua Kelley  LAC  0.0\n","70     22.614286   71.0          Royce Freeman  DEN  0.0\n","250    20.508475  251.0         Justin Jackson  LAC  0.0\n","125    19.250000  126.0              Ito Smith  ATL  0.0\n","629    18.785714  120.0        La'Mical Perine  NYJ  0.0\n","200    18.716418  201.0           Boston Scott  NOR  0.0\n","168    18.685185  169.0         Jordan Wilkins  IND  0.0\n","731    17.958333  222.0           Eno Benjamin  ARI  0.0\n","377    15.587302  122.0        Benny Snell Jr.  PIT  0.0\n","368    15.160000  113.0           Justice Hill  BAL  0.0\n","602    14.866667   93.0        Darrynton Evans  TEN  0.0\n","103    14.839506  104.0           Nyheim Hines  IND  0.0\n","441    14.453125  186.0             Ty Johnson  DET  0.0\n","130    12.788462  131.0          Kalen Ballage  MIA  1.0\n","111    11.190476  112.0            Mark Walton  CIN  0.0\n","395    10.444444  140.0       Ryquell Armstead  JAX  0.0\n","585     8.928571   76.0        Ke'Shawn Vaughn  TAM  0.0\n","653     8.745098  144.0          DeeJay Dallas  SEA  0.0\n","469     8.653846  214.0        Darwin Thompson  KAN  0.0\n","459     8.089286  204.0           Travis Homer  SEA  0.0\n","437     6.439024  182.0      Trayveon Williams  CIN  0.0\n","203     3.125000  204.0         Trenton Cannon  NYJ  0.0"],"text/html":["\n","  <div id=\"df-8e7374db-be14-47a7-bca9-09db44e34b77\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rush Yds PG</th>\n","      <th>Pick</th>\n","      <th>Player</th>\n","      <th>Tm</th>\n","      <th>St</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>550</th>\n","      <td>86.127660</td>\n","      <td>41.0</td>\n","      <td>Jonathan Taylor</td>\n","      <td>IND</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>84.558442</td>\n","      <td>35.0</td>\n","      <td>Nick Chubb</td>\n","      <td>CLE</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>279</th>\n","      <td>75.705882</td>\n","      <td>24.0</td>\n","      <td>Josh Jacobs</td>\n","      <td>OAK</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>71.707692</td>\n","      <td>2.0</td>\n","      <td>Saquon Barkley</td>\n","      <td>NYG</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>308</th>\n","      <td>61.873016</td>\n","      <td>53.0</td>\n","      <td>Miles Sanders</td>\n","      <td>PHI</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>328</th>\n","      <td>61.446154</td>\n","      <td>73.0</td>\n","      <td>David Montgomery</td>\n","      <td>CHI</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>58.285714</td>\n","      <td>236.0</td>\n","      <td>Bo Scarbrough</td>\n","      <td>DAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>56.125000</td>\n","      <td>55.0</td>\n","      <td>J.K. Dobbins</td>\n","      <td>BAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>49.892308</td>\n","      <td>31.0</td>\n","      <td>Sony Michel</td>\n","      <td>NWE</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>49.727273</td>\n","      <td>87.0</td>\n","      <td>Damien Harris</td>\n","      <td>NWE</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>329</th>\n","      <td>49.029412</td>\n","      <td>74.0</td>\n","      <td>Devin Singletary</td>\n","      <td>BUF</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>544</th>\n","      <td>46.895833</td>\n","      <td>35.0</td>\n","      <td>D'Andre Swift</td>\n","      <td>DET</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>575</th>\n","      <td>46.566038</td>\n","      <td>66.0</td>\n","      <td>Antonio Gibson</td>\n","      <td>WAS</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>44.813953</td>\n","      <td>27.0</td>\n","      <td>Rashaad Penny</td>\n","      <td>SEA</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>561</th>\n","      <td>44.457143</td>\n","      <td>52.0</td>\n","      <td>Cam Akers</td>\n","      <td>LAR</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>383</th>\n","      <td>44.043478</td>\n","      <td>128.0</td>\n","      <td>Tony Pollard</td>\n","      <td>DAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>541</th>\n","      <td>42.219512</td>\n","      <td>32.0</td>\n","      <td>Clyde Edwards-Helaire</td>\n","      <td>KAN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>595</th>\n","      <td>40.673913</td>\n","      <td>86.0</td>\n","      <td>Zack Moss</td>\n","      <td>BUF</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>571</th>\n","      <td>40.019231</td>\n","      <td>62.0</td>\n","      <td>AJ Dillon</td>\n","      <td>GNB</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>36.786885</td>\n","      <td>38.0</td>\n","      <td>Ronald Jones II</td>\n","      <td>TAM</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>325</th>\n","      <td>35.269231</td>\n","      <td>70.0</td>\n","      <td>Darrell Henderson</td>\n","      <td>LAR</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>35.000000</td>\n","      <td>43.0</td>\n","      <td>Kerryon Johnson</td>\n","      <td>DET</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>489</th>\n","      <td>33.875000</td>\n","      <td>234.0</td>\n","      <td>Myles Gaskin</td>\n","      <td>MIA</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>357</th>\n","      <td>30.746269</td>\n","      <td>102.0</td>\n","      <td>Alexander Mattison</td>\n","      <td>MIN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>24.945205</td>\n","      <td>134.0</td>\n","      <td>Chase Edmonds</td>\n","      <td>ARI</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>621</th>\n","      <td>23.818182</td>\n","      <td>112.0</td>\n","      <td>Joshua Kelley</td>\n","      <td>LAC</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>22.614286</td>\n","      <td>71.0</td>\n","      <td>Royce Freeman</td>\n","      <td>DEN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>250</th>\n","      <td>20.508475</td>\n","      <td>251.0</td>\n","      <td>Justin Jackson</td>\n","      <td>LAC</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>19.250000</td>\n","      <td>126.0</td>\n","      <td>Ito Smith</td>\n","      <td>ATL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>629</th>\n","      <td>18.785714</td>\n","      <td>120.0</td>\n","      <td>La'Mical Perine</td>\n","      <td>NYJ</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>18.716418</td>\n","      <td>201.0</td>\n","      <td>Boston Scott</td>\n","      <td>NOR</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>168</th>\n","      <td>18.685185</td>\n","      <td>169.0</td>\n","      <td>Jordan Wilkins</td>\n","      <td>IND</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>731</th>\n","      <td>17.958333</td>\n","      <td>222.0</td>\n","      <td>Eno Benjamin</td>\n","      <td>ARI</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>377</th>\n","      <td>15.587302</td>\n","      <td>122.0</td>\n","      <td>Benny Snell Jr.</td>\n","      <td>PIT</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>368</th>\n","      <td>15.160000</td>\n","      <td>113.0</td>\n","      <td>Justice Hill</td>\n","      <td>BAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>602</th>\n","      <td>14.866667</td>\n","      <td>93.0</td>\n","      <td>Darrynton Evans</td>\n","      <td>TEN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>14.839506</td>\n","      <td>104.0</td>\n","      <td>Nyheim Hines</td>\n","      <td>IND</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>441</th>\n","      <td>14.453125</td>\n","      <td>186.0</td>\n","      <td>Ty Johnson</td>\n","      <td>DET</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>12.788462</td>\n","      <td>131.0</td>\n","      <td>Kalen Ballage</td>\n","      <td>MIA</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>11.190476</td>\n","      <td>112.0</td>\n","      <td>Mark Walton</td>\n","      <td>CIN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>10.444444</td>\n","      <td>140.0</td>\n","      <td>Ryquell Armstead</td>\n","      <td>JAX</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>585</th>\n","      <td>8.928571</td>\n","      <td>76.0</td>\n","      <td>Ke'Shawn Vaughn</td>\n","      <td>TAM</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>653</th>\n","      <td>8.745098</td>\n","      <td>144.0</td>\n","      <td>DeeJay Dallas</td>\n","      <td>SEA</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>469</th>\n","      <td>8.653846</td>\n","      <td>214.0</td>\n","      <td>Darwin Thompson</td>\n","      <td>KAN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>459</th>\n","      <td>8.089286</td>\n","      <td>204.0</td>\n","      <td>Travis Homer</td>\n","      <td>SEA</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>437</th>\n","      <td>6.439024</td>\n","      <td>182.0</td>\n","      <td>Trayveon Williams</td>\n","      <td>CIN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>3.125000</td>\n","      <td>204.0</td>\n","      <td>Trenton Cannon</td>\n","      <td>NYJ</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e7374db-be14-47a7-bca9-09db44e34b77')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e7374db-be14-47a7-bca9-09db44e34b77 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e7374db-be14-47a7-bca9-09db44e34b77');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c26751b-ad73-45e6-8f7f-5419151c86e9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c26751b-ad73-45e6-8f7f-5419151c86e9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c26751b-ad73-45e6-8f7f-5419151c86e9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# Runningbacks can also become recievers in some coaches schemes\n","Draft.loc[(Draft['Pos'] == 'RB') & (Draft['Rec']>=10), ['Rec Yds PG', 'Pick', 'Player', 'Tm','St']].sort_values('Rec Yds PG',ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"MWrr20D5H2bI","executionInfo":{"status":"ok","timestamp":1700242498561,"user_tz":300,"elapsed":12,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"377ffcb3-8204-4d56-a59c-553d22d75f74"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Rec Yds PG   Pick                 Player   Tm   St\n","1     29.338462    2.0         Saquon Barkley  NYG  4.0\n","544   27.770833   35.0          D'Andre Swift  DET  0.0\n","103   21.950617  104.0           Nyheim Hines  IND  0.0\n","279   20.500000   24.0            Josh Jacobs  OAK  4.0\n","575   20.358491   66.0         Antonio Gibson  WAS  2.0\n","328   20.092308   73.0       David Montgomery  CHI  3.0\n","550   19.382979   41.0        Jonathan Taylor  IND  3.0\n","489   17.525000  234.0           Myles Gaskin  MIA  1.0\n","383   17.188406  128.0           Tony Pollard  DAL  0.0\n","308   16.238095   53.0          Miles Sanders  PHI  4.0\n","42    15.057143   43.0        Kerryon Johnson  DET  1.0\n","133   14.986301  134.0          Chase Edmonds  ARI  1.0\n","541   14.951220   32.0  Clyde Edwards-Helaire  KAN  1.0\n","329   14.897059   74.0       Devin Singletary  BUF  4.0\n","34    13.129870   35.0             Nick Chubb  CLE  5.0\n","571   12.307692   62.0              AJ Dillon  GNB  0.0\n","441   10.437500  186.0             Ty Johnson  DET  0.0\n","250   10.322034  251.0         Justin Jackson  LAC  0.0\n","325   10.250000   70.0      Darrell Henderson  LAR  1.0\n","595    9.869565   86.0              Zack Moss  BUF  0.0\n","731    9.791667  222.0           Eno Benjamin  ARI  0.0\n","37     9.721311   38.0        Ronald Jones II  TAM  2.0\n","357    9.477612  102.0     Alexander Mattison  MIN  0.0\n","395    8.888889  140.0       Ryquell Armstead  JAX  0.0\n","561    8.771429   52.0              Cam Akers  LAR  1.0\n","125    8.722222  126.0              Ito Smith  ATL  0.0\n","459    8.285714  204.0           Travis Homer  SEA  0.0\n","200    8.044776  201.0           Boston Scott  NOR  0.0\n","653    7.470588  144.0          DeeJay Dallas  SEA  0.0\n","70     7.414286   71.0          Royce Freeman  DEN  0.0\n","564    7.375000   55.0           J.K. Dobbins  BAL  0.0\n","30     6.753846   31.0            Sony Michel  NWE  2.0\n","342    6.750000   87.0          Damien Harris  NWE  3.0\n","602    6.733333   93.0        Darrynton Evans  TEN  0.0\n","621    6.681818  112.0          Joshua Kelley  LAC  0.0\n","111    6.190476  112.0            Mark Walton  CIN  0.0\n","130    5.634615  131.0          Kalen Ballage  MIA  1.0\n","633    5.437500  124.0  Anthony McFarland Jr.  PIT  0.0\n","26     5.279070   27.0          Rashaad Penny  SEA  0.0\n","168    4.851852  169.0         Jordan Wilkins  IND  0.0\n","629    4.500000  120.0        La'Mical Perine  NYJ  0.0\n","368    4.300000  113.0           Justice Hill  BAL  0.0\n","469    4.153846  214.0        Darwin Thompson  KAN  0.0\n","203    3.333333  204.0         Trenton Cannon  NYJ  0.0\n","585    1.952381   76.0        Ke'Shawn Vaughn  TAM  0.0\n","377    1.809524  122.0        Benny Snell Jr.  PIT  0.0\n","437    1.731707  182.0      Trayveon Williams  CIN  0.0"],"text/html":["\n","  <div id=\"df-7a4d9fbb-3015-4a3a-9512-e2067e7364ab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rec Yds PG</th>\n","      <th>Pick</th>\n","      <th>Player</th>\n","      <th>Tm</th>\n","      <th>St</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>29.338462</td>\n","      <td>2.0</td>\n","      <td>Saquon Barkley</td>\n","      <td>NYG</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>544</th>\n","      <td>27.770833</td>\n","      <td>35.0</td>\n","      <td>D'Andre Swift</td>\n","      <td>DET</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>21.950617</td>\n","      <td>104.0</td>\n","      <td>Nyheim Hines</td>\n","      <td>IND</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>279</th>\n","      <td>20.500000</td>\n","      <td>24.0</td>\n","      <td>Josh Jacobs</td>\n","      <td>OAK</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>575</th>\n","      <td>20.358491</td>\n","      <td>66.0</td>\n","      <td>Antonio Gibson</td>\n","      <td>WAS</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>328</th>\n","      <td>20.092308</td>\n","      <td>73.0</td>\n","      <td>David Montgomery</td>\n","      <td>CHI</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>550</th>\n","      <td>19.382979</td>\n","      <td>41.0</td>\n","      <td>Jonathan Taylor</td>\n","      <td>IND</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>489</th>\n","      <td>17.525000</td>\n","      <td>234.0</td>\n","      <td>Myles Gaskin</td>\n","      <td>MIA</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>383</th>\n","      <td>17.188406</td>\n","      <td>128.0</td>\n","      <td>Tony Pollard</td>\n","      <td>DAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>308</th>\n","      <td>16.238095</td>\n","      <td>53.0</td>\n","      <td>Miles Sanders</td>\n","      <td>PHI</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>15.057143</td>\n","      <td>43.0</td>\n","      <td>Kerryon Johnson</td>\n","      <td>DET</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>14.986301</td>\n","      <td>134.0</td>\n","      <td>Chase Edmonds</td>\n","      <td>ARI</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>541</th>\n","      <td>14.951220</td>\n","      <td>32.0</td>\n","      <td>Clyde Edwards-Helaire</td>\n","      <td>KAN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>329</th>\n","      <td>14.897059</td>\n","      <td>74.0</td>\n","      <td>Devin Singletary</td>\n","      <td>BUF</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>13.129870</td>\n","      <td>35.0</td>\n","      <td>Nick Chubb</td>\n","      <td>CLE</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>571</th>\n","      <td>12.307692</td>\n","      <td>62.0</td>\n","      <td>AJ Dillon</td>\n","      <td>GNB</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>441</th>\n","      <td>10.437500</td>\n","      <td>186.0</td>\n","      <td>Ty Johnson</td>\n","      <td>DET</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>250</th>\n","      <td>10.322034</td>\n","      <td>251.0</td>\n","      <td>Justin Jackson</td>\n","      <td>LAC</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>325</th>\n","      <td>10.250000</td>\n","      <td>70.0</td>\n","      <td>Darrell Henderson</td>\n","      <td>LAR</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>595</th>\n","      <td>9.869565</td>\n","      <td>86.0</td>\n","      <td>Zack Moss</td>\n","      <td>BUF</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>731</th>\n","      <td>9.791667</td>\n","      <td>222.0</td>\n","      <td>Eno Benjamin</td>\n","      <td>ARI</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>9.721311</td>\n","      <td>38.0</td>\n","      <td>Ronald Jones II</td>\n","      <td>TAM</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>357</th>\n","      <td>9.477612</td>\n","      <td>102.0</td>\n","      <td>Alexander Mattison</td>\n","      <td>MIN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>8.888889</td>\n","      <td>140.0</td>\n","      <td>Ryquell Armstead</td>\n","      <td>JAX</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>561</th>\n","      <td>8.771429</td>\n","      <td>52.0</td>\n","      <td>Cam Akers</td>\n","      <td>LAR</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>8.722222</td>\n","      <td>126.0</td>\n","      <td>Ito Smith</td>\n","      <td>ATL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>459</th>\n","      <td>8.285714</td>\n","      <td>204.0</td>\n","      <td>Travis Homer</td>\n","      <td>SEA</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>8.044776</td>\n","      <td>201.0</td>\n","      <td>Boston Scott</td>\n","      <td>NOR</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>653</th>\n","      <td>7.470588</td>\n","      <td>144.0</td>\n","      <td>DeeJay Dallas</td>\n","      <td>SEA</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>7.414286</td>\n","      <td>71.0</td>\n","      <td>Royce Freeman</td>\n","      <td>DEN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>7.375000</td>\n","      <td>55.0</td>\n","      <td>J.K. Dobbins</td>\n","      <td>BAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>6.753846</td>\n","      <td>31.0</td>\n","      <td>Sony Michel</td>\n","      <td>NWE</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>6.750000</td>\n","      <td>87.0</td>\n","      <td>Damien Harris</td>\n","      <td>NWE</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>602</th>\n","      <td>6.733333</td>\n","      <td>93.0</td>\n","      <td>Darrynton Evans</td>\n","      <td>TEN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>621</th>\n","      <td>6.681818</td>\n","      <td>112.0</td>\n","      <td>Joshua Kelley</td>\n","      <td>LAC</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>6.190476</td>\n","      <td>112.0</td>\n","      <td>Mark Walton</td>\n","      <td>CIN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>5.634615</td>\n","      <td>131.0</td>\n","      <td>Kalen Ballage</td>\n","      <td>MIA</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>633</th>\n","      <td>5.437500</td>\n","      <td>124.0</td>\n","      <td>Anthony McFarland Jr.</td>\n","      <td>PIT</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>5.279070</td>\n","      <td>27.0</td>\n","      <td>Rashaad Penny</td>\n","      <td>SEA</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>168</th>\n","      <td>4.851852</td>\n","      <td>169.0</td>\n","      <td>Jordan Wilkins</td>\n","      <td>IND</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>629</th>\n","      <td>4.500000</td>\n","      <td>120.0</td>\n","      <td>La'Mical Perine</td>\n","      <td>NYJ</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>368</th>\n","      <td>4.300000</td>\n","      <td>113.0</td>\n","      <td>Justice Hill</td>\n","      <td>BAL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>469</th>\n","      <td>4.153846</td>\n","      <td>214.0</td>\n","      <td>Darwin Thompson</td>\n","      <td>KAN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>3.333333</td>\n","      <td>204.0</td>\n","      <td>Trenton Cannon</td>\n","      <td>NYJ</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>585</th>\n","      <td>1.952381</td>\n","      <td>76.0</td>\n","      <td>Ke'Shawn Vaughn</td>\n","      <td>TAM</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>377</th>\n","      <td>1.809524</td>\n","      <td>122.0</td>\n","      <td>Benny Snell Jr.</td>\n","      <td>PIT</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>437</th>\n","      <td>1.731707</td>\n","      <td>182.0</td>\n","      <td>Trayveon Williams</td>\n","      <td>CIN</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a4d9fbb-3015-4a3a-9512-e2067e7364ab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a4d9fbb-3015-4a3a-9512-e2067e7364ab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a4d9fbb-3015-4a3a-9512-e2067e7364ab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0f1b143e-0402-49f5-9b09-5e82a466175a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f1b143e-0402-49f5-9b09-5e82a466175a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0f1b143e-0402-49f5-9b09-5e82a466175a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["# Recievers Yds Per Game Value"],"metadata":{"id":"sHfNIYw4Ijbe"}},{"cell_type":"code","source":["# And Receivers\n","Draft.loc[(Draft['Pos'] == 'WR') & (Draft['Rec']>=25), ['Rec Yds PG', 'Pick', 'Player', 'Tm','St']].sort_values('Rec Yds PG',ascending = False).head(40)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"wuosgwZeFEbf","executionInfo":{"status":"ok","timestamp":1700248523911,"user_tz":300,"elapsed":246,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"b3df556b-a175-473a-f43a-bf2997c8a5eb"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Rec Yds PG   Pick                    Player   Tm   St\n","531   98.109091   22.0          Justin Jefferson  MIN  3.0\n","306   79.852941   51.0                A.J. Brown  TEN  4.0\n","526   71.946429   17.0               CeeDee Lamb  DAL  3.0\n","331   67.267606   76.0            Terry McLaurin  WAS  4.0\n","23    66.954545   24.0                D.J. Moore  CAR  5.0\n","25    66.543860   26.0             Calvin Ridley  ATL  2.0\n","319   64.194444   64.0              D.K. Metcalf  SEA  4.0\n","542   62.423077   33.0               Tee Higgins  CIN  3.0\n","291   61.964912   36.0              Deebo Samuel  SFO  3.0\n","534   60.547170   25.0             Brandon Aiyuk  SFO  3.0\n","321   56.735294   66.0           Diontae Johnson  PIT  4.0\n","543   56.277778   34.0       Michael Pittman Jr.  IND  3.0\n","46    55.925926   47.0            Christian Kirk  ARI  5.0\n","524   54.812500   15.0               Jerry Jeudy  DEN  2.0\n","39    52.972603   40.0          Courtland Sutton  DEN  3.0\n","280   52.818182   25.0            Marquise Brown  BAL  3.0\n","80    46.710526   81.0            Michael Gallup  DAL  4.0\n","60    46.066667   61.0                  DJ Chark  JAX  3.0\n","521   46.050000   12.0           Henry Ruggs III  LVR  1.0\n","682   45.358491  173.0            Darnell Mooney  CHI  2.0\n","558   44.117647   49.0            Chase Claypool  PIT  1.0\n","637   43.963636  128.0             Gabriel Davis  BUF  2.0\n","404   42.515625  149.0            Hunter Renfrow  OAK  0.0\n","426   41.955224  171.0            Darius Slayton  NYG  3.0\n","696   36.740000  187.0     Donovan Peoples-Jones  CLE  1.0\n","173   36.511905  174.0  Marquez Valdes-Scantling  GNB  4.0\n","193   33.662162  194.0              Russell Gage  ATL  0.0\n","311   33.015625   56.0            Mecole Hardman  KAN  0.0\n","685   32.647059  176.0               K.J. Osborn  MIN  1.0\n","50    31.780000   51.0            Anthony Miller  CHI  2.0\n","439   31.705882  184.0            Travis Fulgham  DET  1.0\n","551   31.306122   42.0      Laviska Shenault Jr.  JAX  1.0\n","566   29.384615   57.0             Van Jefferson  LAR  2.0\n","102   29.272727  103.0               Keke Coutee  HOU  0.0\n","104   27.800000  105.0          Antonio Callaway  CLE  1.0\n","555   26.956522   46.0                 KJ Hamler  DEN  0.0\n","716   26.947368  207.0            Isaiah Hodgins  BUF  0.0\n","314   26.700000   59.0           Parris Campbell  IND  1.0\n","90    26.328358   91.0            Tre'Quan Smith  NOR  3.0\n","59    26.274194   60.0          James Washington  PIT  2.0"],"text/html":["\n","  <div id=\"df-820e1651-b128-45de-bfa1-a1e464d9257e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rec Yds PG</th>\n","      <th>Pick</th>\n","      <th>Player</th>\n","      <th>Tm</th>\n","      <th>St</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>531</th>\n","      <td>98.109091</td>\n","      <td>22.0</td>\n","      <td>Justin Jefferson</td>\n","      <td>MIN</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>306</th>\n","      <td>79.852941</td>\n","      <td>51.0</td>\n","      <td>A.J. Brown</td>\n","      <td>TEN</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>526</th>\n","      <td>71.946429</td>\n","      <td>17.0</td>\n","      <td>CeeDee Lamb</td>\n","      <td>DAL</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>331</th>\n","      <td>67.267606</td>\n","      <td>76.0</td>\n","      <td>Terry McLaurin</td>\n","      <td>WAS</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>66.954545</td>\n","      <td>24.0</td>\n","      <td>D.J. Moore</td>\n","      <td>CAR</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>66.543860</td>\n","      <td>26.0</td>\n","      <td>Calvin Ridley</td>\n","      <td>ATL</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>319</th>\n","      <td>64.194444</td>\n","      <td>64.0</td>\n","      <td>D.K. Metcalf</td>\n","      <td>SEA</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>542</th>\n","      <td>62.423077</td>\n","      <td>33.0</td>\n","      <td>Tee Higgins</td>\n","      <td>CIN</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>61.964912</td>\n","      <td>36.0</td>\n","      <td>Deebo Samuel</td>\n","      <td>SFO</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>534</th>\n","      <td>60.547170</td>\n","      <td>25.0</td>\n","      <td>Brandon Aiyuk</td>\n","      <td>SFO</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>321</th>\n","      <td>56.735294</td>\n","      <td>66.0</td>\n","      <td>Diontae Johnson</td>\n","      <td>PIT</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>543</th>\n","      <td>56.277778</td>\n","      <td>34.0</td>\n","      <td>Michael Pittman Jr.</td>\n","      <td>IND</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>55.925926</td>\n","      <td>47.0</td>\n","      <td>Christian Kirk</td>\n","      <td>ARI</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>524</th>\n","      <td>54.812500</td>\n","      <td>15.0</td>\n","      <td>Jerry Jeudy</td>\n","      <td>DEN</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>52.972603</td>\n","      <td>40.0</td>\n","      <td>Courtland Sutton</td>\n","      <td>DEN</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>280</th>\n","      <td>52.818182</td>\n","      <td>25.0</td>\n","      <td>Marquise Brown</td>\n","      <td>BAL</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>46.710526</td>\n","      <td>81.0</td>\n","      <td>Michael Gallup</td>\n","      <td>DAL</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>46.066667</td>\n","      <td>61.0</td>\n","      <td>DJ Chark</td>\n","      <td>JAX</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>521</th>\n","      <td>46.050000</td>\n","      <td>12.0</td>\n","      <td>Henry Ruggs III</td>\n","      <td>LVR</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>682</th>\n","      <td>45.358491</td>\n","      <td>173.0</td>\n","      <td>Darnell Mooney</td>\n","      <td>CHI</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>558</th>\n","      <td>44.117647</td>\n","      <td>49.0</td>\n","      <td>Chase Claypool</td>\n","      <td>PIT</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>637</th>\n","      <td>43.963636</td>\n","      <td>128.0</td>\n","      <td>Gabriel Davis</td>\n","      <td>BUF</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>404</th>\n","      <td>42.515625</td>\n","      <td>149.0</td>\n","      <td>Hunter Renfrow</td>\n","      <td>OAK</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>426</th>\n","      <td>41.955224</td>\n","      <td>171.0</td>\n","      <td>Darius Slayton</td>\n","      <td>NYG</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>696</th>\n","      <td>36.740000</td>\n","      <td>187.0</td>\n","      <td>Donovan Peoples-Jones</td>\n","      <td>CLE</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>36.511905</td>\n","      <td>174.0</td>\n","      <td>Marquez Valdes-Scantling</td>\n","      <td>GNB</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>33.662162</td>\n","      <td>194.0</td>\n","      <td>Russell Gage</td>\n","      <td>ATL</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>33.015625</td>\n","      <td>56.0</td>\n","      <td>Mecole Hardman</td>\n","      <td>KAN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>32.647059</td>\n","      <td>176.0</td>\n","      <td>K.J. Osborn</td>\n","      <td>MIN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>31.780000</td>\n","      <td>51.0</td>\n","      <td>Anthony Miller</td>\n","      <td>CHI</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>439</th>\n","      <td>31.705882</td>\n","      <td>184.0</td>\n","      <td>Travis Fulgham</td>\n","      <td>DET</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>551</th>\n","      <td>31.306122</td>\n","      <td>42.0</td>\n","      <td>Laviska Shenault Jr.</td>\n","      <td>JAX</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>29.384615</td>\n","      <td>57.0</td>\n","      <td>Van Jefferson</td>\n","      <td>LAR</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>29.272727</td>\n","      <td>103.0</td>\n","      <td>Keke Coutee</td>\n","      <td>HOU</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>27.800000</td>\n","      <td>105.0</td>\n","      <td>Antonio Callaway</td>\n","      <td>CLE</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>555</th>\n","      <td>26.956522</td>\n","      <td>46.0</td>\n","      <td>KJ Hamler</td>\n","      <td>DEN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>716</th>\n","      <td>26.947368</td>\n","      <td>207.0</td>\n","      <td>Isaiah Hodgins</td>\n","      <td>BUF</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>314</th>\n","      <td>26.700000</td>\n","      <td>59.0</td>\n","      <td>Parris Campbell</td>\n","      <td>IND</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>26.328358</td>\n","      <td>91.0</td>\n","      <td>Tre'Quan Smith</td>\n","      <td>NOR</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>26.274194</td>\n","      <td>60.0</td>\n","      <td>James Washington</td>\n","      <td>PIT</td>\n","      <td>2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-820e1651-b128-45de-bfa1-a1e464d9257e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-820e1651-b128-45de-bfa1-a1e464d9257e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-820e1651-b128-45de-bfa1-a1e464d9257e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f40295c1-e861-4cc3-baba-be4d96948cc1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f40295c1-e861-4cc3-baba-be4d96948cc1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f40295c1-e861-4cc3-baba-be4d96948cc1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["# There are recievers that are part of the running game\n","Draft.loc[(Draft['Pos'] == 'WR') & (Draft['Rush Att']>=5), ['Rush Yds PG', 'Pick', 'Player', 'Tm','St']].sort_values('Rush Yds PG',ascending = False).head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"TQi8CzDPFcJB","executionInfo":{"status":"ok","timestamp":1700242498788,"user_tz":300,"elapsed":237,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"b8867073-f72f-465a-b0cd-4c4e83bc0547"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Rush Yds PG   Pick                Player   Tm   St\n","291    15.385965   36.0          Deebo Samuel  SFO  3.0\n","551     5.142857   42.0  Laviska Shenault Jr.  JAX  1.0\n","526     4.250000   17.0           CeeDee Lamb  DAL  3.0\n","601     4.055556   92.0        Devin Duvernay  BAL  1.0\n","23      3.806818   24.0            D.J. Moore  CAR  5.0\n","558     3.352941   49.0        Chase Claypool  PIT  1.0\n","521     3.250000   12.0       Henry Ruggs III  LVR  1.0\n","555     2.739130   46.0             KJ Hamler  DEN  0.0\n","314     2.700000   59.0       Parris Campbell  IND  1.0\n","660     2.636364  151.0              Joe Reed  LAC  0.0"],"text/html":["\n","  <div id=\"df-3a449608-1d78-4eaa-b1c8-3c38af7ee5e0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rush Yds PG</th>\n","      <th>Pick</th>\n","      <th>Player</th>\n","      <th>Tm</th>\n","      <th>St</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>291</th>\n","      <td>15.385965</td>\n","      <td>36.0</td>\n","      <td>Deebo Samuel</td>\n","      <td>SFO</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>551</th>\n","      <td>5.142857</td>\n","      <td>42.0</td>\n","      <td>Laviska Shenault Jr.</td>\n","      <td>JAX</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>526</th>\n","      <td>4.250000</td>\n","      <td>17.0</td>\n","      <td>CeeDee Lamb</td>\n","      <td>DAL</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>601</th>\n","      <td>4.055556</td>\n","      <td>92.0</td>\n","      <td>Devin Duvernay</td>\n","      <td>BAL</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>3.806818</td>\n","      <td>24.0</td>\n","      <td>D.J. Moore</td>\n","      <td>CAR</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>558</th>\n","      <td>3.352941</td>\n","      <td>49.0</td>\n","      <td>Chase Claypool</td>\n","      <td>PIT</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>521</th>\n","      <td>3.250000</td>\n","      <td>12.0</td>\n","      <td>Henry Ruggs III</td>\n","      <td>LVR</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>555</th>\n","      <td>2.739130</td>\n","      <td>46.0</td>\n","      <td>KJ Hamler</td>\n","      <td>DEN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>314</th>\n","      <td>2.700000</td>\n","      <td>59.0</td>\n","      <td>Parris Campbell</td>\n","      <td>IND</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>660</th>\n","      <td>2.636364</td>\n","      <td>151.0</td>\n","      <td>Joe Reed</td>\n","      <td>LAC</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a449608-1d78-4eaa-b1c8-3c38af7ee5e0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3a449608-1d78-4eaa-b1c8-3c38af7ee5e0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3a449608-1d78-4eaa-b1c8-3c38af7ee5e0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-30771d4a-3db7-4516-b701-4d238aa7610d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30771d4a-3db7-4516-b701-4d238aa7610d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-30771d4a-3db7-4516-b701-4d238aa7610d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["# What Team was most succesful in drafting on the defesive line"],"metadata":{"id":"C4hZFLnb5GSZ"}},{"cell_type":"code","source":["# Since dominant teams are known for their also dominant D-Line (Like the Eagles and 49s) we can see if it is causation and not coorelation"],"metadata":{"id":"yIGf9Lz8ItTx","executionInfo":{"status":"ok","timestamp":1700242498788,"user_tz":300,"elapsed":15,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["Draft.groupby('Tm')['Sk'].sum().sort_values(ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YravOGFa5FDD","executionInfo":{"status":"ok","timestamp":1700242498790,"user_tz":300,"elapsed":17,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"9bc3daf9-c586-4e30-f6bf-56d64161faee"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Tm\n","WAS    106.0\n","CAR     82.5\n","OAK     82.0\n","DEN     77.0\n","NYG     75.5\n","LAC     75.5\n","TAM     74.5\n","JAX     73.0\n","SEA     72.0\n","TEN     69.5\n","SFO     67.5\n","MIA     63.0\n","BAL     59.0\n","LAR     57.0\n","BUF     55.0\n","IND     53.0\n","NYJ     48.0\n","CIN     45.0\n","CHI     45.0\n","PHI     43.0\n","NWE     41.5\n","KAN     41.5\n","GNB     40.5\n","DAL     38.0\n","HOU     37.5\n","PIT     37.0\n","NOR     36.5\n","MIN     34.0\n","ARI     29.0\n","CLE     28.0\n","DET     27.5\n","ATL     20.0\n","LVR      2.0\n","Name: Sk, dtype: float64"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["Draft.loc[Draft['Pos'] == ('DE' or 'DT'), 'Tm'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GQMfM3D36C8c","executionInfo":{"status":"ok","timestamp":1700242498790,"user_tz":300,"elapsed":14,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"7d4ecaa5-39a0-4e01-c506-b83476fc5fd6"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["OAK    4\n","MIN    4\n","DET    4\n","DAL    4\n","LAR    4\n","WAS    4\n","SEA    3\n","CIN    3\n","PHI    3\n","HOU    3\n","GNB    2\n","BAL    2\n","BUF    2\n","ATL    2\n","ARI    2\n","CAR    2\n","MIA    2\n","CHI    2\n","NYG    2\n","IND    2\n","KAN    2\n","SFO    1\n","NOR    1\n","CLE    1\n","NWE    1\n","TAM    1\n","PIT    1\n","JAX    1\n","NYJ    1\n","DEN    1\n","Name: Tm, dtype: int64"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["result = (Draft.groupby('Tm')['Sk'].sum()) / (Draft.loc[Draft['Pos'].isin(['DE', 'DT']), 'Tm'].value_counts())\n","result = result.sort_values(ascending=False)\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ZArTRWU6z7A","executionInfo":{"status":"ok","timestamp":1700242498790,"user_tz":300,"elapsed":12,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"6cac9df9-aa2b-41a4-9983-8c11ac7eb3a4"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["NOR    36.500000\n","TEN    34.750000\n","DEN    25.666667\n","LAC    25.166667\n","NWE    20.750000\n","TAM    18.625000\n","JAX    18.250000\n","IND    17.666667\n","WAS    17.666667\n","SFO    16.875000\n","CAR    16.500000\n","MIA    15.750000\n","CHI    15.000000\n","SEA    14.400000\n","PHI    14.333333\n","CLE    14.000000\n","BUF    13.750000\n","OAK    13.666667\n","GNB    13.500000\n","NYG    12.583333\n","NYJ    12.000000\n","BAL    11.800000\n","CIN    11.250000\n","LAR     9.500000\n","HOU     9.375000\n","PIT     9.250000\n","KAN     8.300000\n","ARI     7.250000\n","ATL     6.666667\n","DAL     6.333333\n","MIN     5.666667\n","DET     4.583333\n","LVR          NaN\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["# What was the draft with the best position for that year?"],"metadata":{"id":"hjXnyoSy-zgQ"}},{"cell_type":"code","source":["Draft.loc[Draft['Pos'] == 'QB', ['Pass Yds PG', 'Rush Yds PG']].sum(axis=1).mean()\n","Draft.loc[Draft['Pos'] == 'RB', ['Rec Yds PG', 'Rush Yds PG']].sum(axis=1).mean()\n","Draft.loc[Draft['Pos'] == 'WR', ['Rec Yds PG', 'Rush Yds PG']].sum(axis=1).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oa6Agmvv-5-J","executionInfo":{"status":"ok","timestamp":1700242498790,"user_tz":300,"elapsed":11,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"082db54f-fa04-4a5e-c711-c9e5f750700e"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["26.554714814106095"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["Draft.loc[Draft['Pos'] == 'RB', ['Rec Yds PG', 'Rush Yds PG']].sum(axis=1).mean()"],"metadata":{"id":"QOYnB66-AAlE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1700242498790,"user_tz":300,"elapsed":9,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"6535cb6e-e857-46ff-8266-24bba0d77187"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["34.668172315207684"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["Draft.loc[Draft['Pos'] == 'WR', ['Rec Yds PG', 'Rush Yds PG']].sum(axis=1).mean()"],"metadata":{"id":"FFxdv-luAA9L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1700242499101,"user_tz":300,"elapsed":3,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"af482fe0-8705-4200-d895-4363fbf1d67f"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["26.554714814106095"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Assuming 'Year' is a column in your DataFrame\n","# Replace 'Year' with the actual column name containing the year information\n","Draft['Year'] = pd.to_datetime(Draft['Year'])  # Ensure 'Year' is in datetime format\n","\n","# Filter data for each position and calculate means\n","qb_means_by_year = Draft.loc[Draft['Pos'] == 'QB', ['Year', 'Pass Yds PG', 'Rush Yds PG']].groupby('Year').sum().mean(axis=1)\n","rb_means_by_year = Draft.loc[Draft['Pos'] == 'RB', ['Year', 'Rec Yds PG', 'Rush Yds PG']].groupby('Year').sum().mean(axis=1)\n","wr_means_by_year = Draft.loc[Draft['Pos'] == 'WR', ['Year', 'Rec Yds PG', 'Rush Yds PG']].groupby('Year').sum().mean(axis=1)\n","\n","# Plotting\n","plt.figure(figsize=(10, 6))\n","\n","plt.plot(qb_means_by_year.index, qb_means_by_year, label='QB', marker='o')\n","plt.plot(rb_means_by_year.index, rb_means_by_year, label='RB', marker='o')\n","plt.plot(wr_means_by_year.index, wr_means_by_year, label='WR', marker='o')\n","\n","plt.title('Mean Yards per Game Over 3 Years by Position')\n","plt.xlabel('Year')\n","plt.ylabel('Mean Yards per Game')\n","plt.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"f4vKzw9XAQKR","executionInfo":{"status":"ok","timestamp":1700242499764,"user_tz":300,"elapsed":666,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}},"outputId":"8b7c2f66-58cb-4afd-8a2c-a1b7a7bfcaa4"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Downloading it so I can try out some tabluea visualizations"],"metadata":{"id":"R0yW2V9oMe9g"}},{"cell_type":"code","source":["Draft.to_csv('/content/drive/MyDrive/Applied Data Science/Data/Draft.csv', index=False)"],"metadata":{"id":"tgcdDtNYMrnF","executionInfo":{"status":"ok","timestamp":1700242500310,"user_tz":300,"elapsed":551,"user":{"displayName":"Harrison Lamnin","userId":"17250099202495188691"}}},"execution_count":38,"outputs":[]}]}